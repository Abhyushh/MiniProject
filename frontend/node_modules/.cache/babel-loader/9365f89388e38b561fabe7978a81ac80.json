{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Bhatia\\\\Desktop\\\\MiniProject\\\\frontend\\\\src\\\\components\\\\MainHeader\\\\component.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MainHeader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainHeader = _ref => {\n  let {\n    pauseSong,\n    resumeSong,\n    fetchCategories,\n    fetchNewReleases,\n    fetchFeatured,\n    updateHeaderTitle,\n    updateViewType,\n    songPaused,\n    headerTitle,\n    viewType,\n    playlists,\n    token,\n    artists\n  } = _ref;\n  let currentPlaylist;\n  let currentArtist;\n\n  if (viewType === 'playlist') {\n    currentPlaylist = playlists.filter(playlist => {\n      return playlist.name === headerTitle;\n    })[0];\n  }\n\n  if (viewType === 'Artist' && artists.length > 0) {\n    currentArtist = artists.filter(artist => {\n      return artist.name === headerTitle;\n    })[0];\n  } // const clickMe = () => {\n  //   fetch(\"http://localhost:5000/playlist\")\n  //     .then(function (response) {\n  //       console.log(\"It worked, response is: \", response)\n  //       this.props.history.push({\n  //         // pathname: '/nextcomponent'\n  //       });\n  //     }).catch(function () {\n  //       console.log(\"error\");\n  //     });\n  //   console.log(currentPlaylist);\n  // }\n  // const requestOptions = {\n  //   method: 'POST',\n  //   headers: { 'Content-Type': 'application/json' },\n  //   body: JSON.stringify({ title: 'React POST Request Example' })\n  // };\n  // fetch('http://localhost:5000/playlist', requestOptions)\n  //   .then(response => response.json())\n  // // .then(data => this.setState({ postId: data.id }));\n  // console.log(\"ernjrv\");\n\n\n  const submit = () => {\n    // let url = \"http://localhost:5000/playlist\";\n    // let data = this.state;\n    console.log(\"okkk\");\n    fetch(\"http://localhost:5000/playlist\", {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      } // body: JSON.stringify()\n\n    }).then(() => {\n      console.log('added');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-title\",\n    children: [viewType === 'playlist' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"playlist\",\n          className: \"playlist-image\",\n          src: currentPlaylist.images[0] ? currentPlaylist.images[0].url : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-text\",\n          children: \"PLAYLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header-title\",\n          children: headerTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"created-by\",\n          children: [\"Created By: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lighter-text\",\n            children: currentPlaylist.owner.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 51\n          }, this), \" - \", currentPlaylist.tracks.total, \" songs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: !songPaused ? pauseSong : resumeSong,\n          className: \"main-pause-play-btn\",\n          children: songPaused ? 'PLAY' : 'PAUSE'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submit,\n          className: \"main-pause-play-btn\",\n          children: \" PORT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), viewType === 'Artist' && currentArtist && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-artist-header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"current-artist\",\n          className: \"current-artist-image\",\n          src: currentArtist.images[0].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-artist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Artist from your library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentArtist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: !songPaused ? pauseSong : resumeSong,\n        className: \"main-pause-play-btn artist-button\",\n        children: songPaused ? 'PLAY' : 'PAUSE'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), (headerTitle === 'Songs' || headerTitle === 'Recently Played' || headerTitle === 'Albums' || headerTitle === 'Artists') && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header-title\",\n        children: headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), headerTitle !== 'Artists' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: !songPaused ? pauseSong : resumeSong,\n        className: \"main-pause-play-btn\",\n        children: songPaused ? 'PLAY' : 'PAUSE'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), headerTitle === 'Browse' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header-title\",\n        children: headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browse-headers\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: viewType === 'Genres' ? 'active' : '',\n          onClick: () => {\n            fetchCategories(token);\n            updateViewType('Genres');\n            updateHeaderTitle('Browse');\n          },\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: viewType === 'New Releases' ? 'active' : '',\n          onClick: () => {\n            fetchNewReleases(token);\n            updateViewType('New Releases');\n            updateHeaderTitle('Browse');\n          },\n          children: \"New Releases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: viewType === 'Featured' ? 'active' : '',\n          onClick: () => {\n            fetchFeatured(token);\n            updateViewType('Featured');\n            updateHeaderTitle('Browse');\n          },\n          children: \"Featured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MainHeader;\nMainHeader.propTypes = {\n  pauseSong: PropTypes.func,\n  resumeSong: PropTypes.func,\n  fetchCategories: PropTypes.func,\n  fetchNewReleases: PropTypes.func,\n  fetchFeatured: PropTypes.func,\n  updateHeaderTitle: PropTypes.func,\n  updateViewType: PropTypes.func,\n  songPaused: PropTypes.bool,\n  headerTitle: PropTypes.string,\n  viewType: PropTypes.string,\n  playlists: PropTypes.array,\n  playlistMenu: PropTypes.array,\n  token: PropTypes.string,\n  artists: PropTypes.array\n};\nexport default MainHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainHeader\");","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/components/MainHeader/component.js"],"names":["React","PropTypes","MainHeader","pauseSong","resumeSong","fetchCategories","fetchNewReleases","fetchFeatured","updateHeaderTitle","updateViewType","songPaused","headerTitle","viewType","playlists","token","artists","currentPlaylist","currentArtist","filter","playlist","name","length","artist","submit","console","log","fetch","method","headers","then","images","url","owner","display_name","tracks","total","propTypes","func","bool","string","array","playlistMenu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = ({\r\n  pauseSong,\r\n  resumeSong,\r\n  fetchCategories,\r\n  fetchNewReleases,\r\n  fetchFeatured,\r\n  updateHeaderTitle,\r\n  updateViewType,\r\n  songPaused,\r\n  headerTitle,\r\n  viewType,\r\n  playlists,\r\n  token,\r\n  artists\r\n}) => {\r\n\r\n  let currentPlaylist;\r\n  let currentArtist;\r\n\r\n  if (viewType === 'playlist') {\r\n    currentPlaylist = playlists.filter(playlist => {\r\n      return playlist.name === headerTitle;\r\n    })[0];\r\n  }\r\n\r\n  if (viewType === 'Artist' && artists.length > 0) {\r\n    currentArtist = artists.filter(artist => {\r\n      return artist.name === headerTitle;\r\n    })[0];\r\n  }\r\n  // const clickMe = () => {\r\n  //   fetch(\"http://localhost:5000/playlist\")\r\n  //     .then(function (response) {\r\n  //       console.log(\"It worked, response is: \", response)\r\n  //       this.props.history.push({\r\n  //         // pathname: '/nextcomponent'\r\n  //       });\r\n  //     }).catch(function () {\r\n  //       console.log(\"error\");\r\n  //     });\r\n  //   console.log(currentPlaylist);\r\n  // }\r\n  // const requestOptions = {\r\n  //   method: 'POST',\r\n  //   headers: { 'Content-Type': 'application/json' },\r\n  //   body: JSON.stringify({ title: 'React POST Request Example' })\r\n  // };\r\n  // fetch('http://localhost:5000/playlist', requestOptions)\r\n  //   .then(response => response.json())\r\n  // // .then(data => this.setState({ postId: data.id }));\r\n  // console.log(\"ernjrv\");\r\n  const submit = () => {\r\n    // let url = \"http://localhost:5000/playlist\";\r\n    // let data = this.state;\r\n    console.log(\"okkk\");\r\n    fetch(\"http://localhost:5000/playlist\", {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      },\r\n      // body: JSON.stringify()\r\n    }).then(() => {\r\n      console.log('added')\r\n    })\r\n  }\r\n  return (\r\n    <div className='section-title'>\r\n      {viewType === 'playlist' && (\r\n        <div className='playlist-title-container'>\r\n          <div className='playlist-image-container'>\r\n            <img alt=\"playlist\" className='playlist-image' src={currentPlaylist.images[0] ? currentPlaylist.images[0].url : null} />\r\n          </div>\r\n          <div className='playlist-info-container'>\r\n            <p className='playlist-text'>PLAYLIST</p>\r\n            <h3 className='header-title'>{headerTitle}</h3>\r\n            <p className='created-by'>Created By: <span className='lighter-text'>{currentPlaylist.owner.display_name}</span> - {currentPlaylist.tracks.total} songs</p>\r\n            <button\r\n              onClick={!songPaused ? pauseSong : resumeSong}\r\n              className='main-pause-play-btn'>\r\n              {songPaused ? 'PLAY' : 'PAUSE'}\r\n            </button>&nbsp;&nbsp;\r\n            <button type=\"submit\" onClick={submit} className='main-pause-play-btn'> PORT\r\n            </button>\r\n            <br /><br /><br />\r\n          </div>\r\n        </div>\r\n      )\r\n      }\r\n\r\n      {\r\n        viewType === 'Artist' && currentArtist && (\r\n          <div>\r\n            <div className='current-artist-header-container'>\r\n              <img alt=\"current-artist\" className='current-artist-image' src={currentArtist.images[0].url} />\r\n              <div className='current-artist-info'>\r\n                <p>Artist from your library</p>\r\n                <h3>{currentArtist.name}</h3>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={!songPaused ? pauseSong : resumeSong}\r\n              className='main-pause-play-btn artist-button'>\r\n              {songPaused ? 'PLAY' : 'PAUSE'}\r\n            </button>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      {\r\n        (\r\n          headerTitle === 'Songs' ||\r\n          headerTitle === 'Recently Played' ||\r\n          headerTitle === 'Albums' ||\r\n          headerTitle === 'Artists') && (\r\n          <div>\r\n            <h3 className='header-title'>{headerTitle}</h3>\r\n            {headerTitle !== 'Artists' && (\r\n              <button\r\n                onClick={!songPaused ? pauseSong : resumeSong}\r\n                className='main-pause-play-btn'>\r\n                {songPaused ? 'PLAY' : 'PAUSE'}\r\n              </button>\r\n            )}\r\n\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        (headerTitle === 'Browse') && (\r\n          <div>\r\n            <h3 className='header-title'>{headerTitle}</h3>\r\n            <div className='browse-headers'>\r\n              <p className={viewType === 'Genres' ? 'active' : ''} onClick={() => { fetchCategories(token); updateViewType('Genres'); updateHeaderTitle('Browse'); }}>Genres</p>\r\n              <p className={viewType === 'New Releases' ? 'active' : ''} onClick={() => { fetchNewReleases(token); updateViewType('New Releases'); updateHeaderTitle('Browse'); }}>New Releases</p>\r\n              <p className={viewType === 'Featured' ? 'active' : ''} onClick={() => { fetchFeatured(token); updateViewType('Featured'); updateHeaderTitle('Browse'); }}>Featured</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </div >\r\n\r\n  );\r\n\r\n};\r\n\r\nMainHeader.propTypes = {\r\n  pauseSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  fetchCategories: PropTypes.func,\r\n  fetchNewReleases: PropTypes.func,\r\n  fetchFeatured: PropTypes.func,\r\n  updateHeaderTitle: PropTypes.func,\r\n  updateViewType: PropTypes.func,\r\n  songPaused: PropTypes.bool,\r\n  headerTitle: PropTypes.string,\r\n  viewType: PropTypes.string,\r\n  playlists: PropTypes.array,\r\n  playlistMenu: PropTypes.array,\r\n  token: PropTypes.string,\r\n  artists: PropTypes.array,\r\n};\r\n\r\nexport default MainHeader;\r\n"]},"metadata":{},"sourceType":"module"}