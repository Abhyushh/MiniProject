{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Bhatia\\\\Desktop\\\\MiniProject\\\\frontend\\\\src\\\\components\\\\UserPlaylists\\\\component.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./UserPlaylists.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserPlaylists extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.userId !== \"\" && nextProps.token !== \"\") {\n      this.props.fetchPlaylistsMenu(nextProps.userId, nextProps.token);\n    }\n  }\n\n  renderPlaylists() {\n    return this.props.playlistMenu.map(playlist => {\n      const getPlaylistSongs = () => {\n        this.props.fetchPlaylistSongs(playlist.owner.id, playlist.id, this.props.token);\n        this.props.updateHeaderTitle(playlist.name);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: getPlaylistSongs,\n        className: this.props.title === playlist.name ? \"active side-menu-item\" : \"side-menu-item\",\n        children: playlist.name\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-playlist-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"user-playlist-header\",\n        children: \"Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), this.props.playlistMenu && this.renderPlaylists()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nUserPlaylists.propTypes = {\n  userId: PropTypes.string,\n  token: PropTypes.string,\n  title: PropTypes.string,\n  playlistMenu: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  fetchPlaylistsMenu: PropTypes.func,\n  fetchPlaylistSongs: PropTypes.func,\n  updateHeaderTitle: PropTypes.func\n};\nexport default UserPlaylists;","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/components/UserPlaylists/component.js"],"names":["React","Component","PropTypes","UserPlaylists","componentWillReceiveProps","nextProps","userId","token","props","fetchPlaylistsMenu","renderPlaylists","playlistMenu","map","playlist","getPlaylistSongs","fetchPlaylistSongs","owner","id","updateHeaderTitle","name","title","render","propTypes","string","oneOfType","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,MAAV,KAAqB,EAArB,IAA2BD,SAAS,CAACE,KAAV,KAAoB,EAAnD,EAAuD;AACrD,WAAKC,KAAL,CAAWC,kBAAX,CAA8BJ,SAAS,CAACC,MAAxC,EAAgDD,SAAS,CAACE,KAA1D;AACD;AACF;;AAEDG,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,GAAxB,CAA4BC,QAAQ,IAAI;AAC7C,YAAMC,gBAAgB,GAAG,MAAM;AAC7B,aAAKN,KAAL,CAAWO,kBAAX,CACEF,QAAQ,CAACG,KAAT,CAAeC,EADjB,EAEEJ,QAAQ,CAACI,EAFX,EAGE,KAAKT,KAAL,CAAWD,KAHb;AAKA,aAAKC,KAAL,CAAWU,iBAAX,CAA6BL,QAAQ,CAACM,IAAtC;AACD,OAPD;;AASA,0BACE;AACE,QAAA,OAAO,EAAEL,gBADX;AAEE,QAAA,SAAS,EACP,KAAKN,KAAL,CAAWY,KAAX,KAAqBP,QAAQ,CAACM,IAA9B,GACI,uBADJ,GAEI,gBALR;AAAA,kBASGN,QAAQ,CAACM;AATZ,SAOON,QAAQ,CAACI,EAPhB;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAvBM,CAAP;AAwBD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKb,KAAL,CAAWG,YAAX,IAA2B,KAAKD,eAAL,EAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAzCmC;;AA4CtCP,aAAa,CAACmB,SAAd,GAA0B;AACxBhB,EAAAA,MAAM,EAAEJ,SAAS,CAACqB,MADM;AAExBhB,EAAAA,KAAK,EAAEL,SAAS,CAACqB,MAFO;AAGxBH,EAAAA,KAAK,EAAElB,SAAS,CAACqB,MAHO;AAIxBZ,EAAAA,YAAY,EAAET,SAAS,CAACsB,SAAV,CAAoB,CAACtB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACuB,KAA7B,CAApB,CAJU;AAKxBhB,EAAAA,kBAAkB,EAAEP,SAAS,CAACwB,IALN;AAMxBX,EAAAA,kBAAkB,EAAEb,SAAS,CAACwB,IANN;AAOxBR,EAAAA,iBAAiB,EAAEhB,SAAS,CAACwB;AAPL,CAA1B;AAUA,eAAevB,aAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./UserPlaylists.css\";\r\n\r\nclass UserPlaylists extends Component {\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.userId !== \"\" && nextProps.token !== \"\") {\r\n      this.props.fetchPlaylistsMenu(nextProps.userId, nextProps.token);\r\n    }\r\n  }\r\n\r\n  renderPlaylists() {\r\n    return this.props.playlistMenu.map(playlist => {\r\n      const getPlaylistSongs = () => {\r\n        this.props.fetchPlaylistSongs(\r\n          playlist.owner.id,\r\n          playlist.id,\r\n          this.props.token\r\n        );\r\n        this.props.updateHeaderTitle(playlist.name);\r\n      };\r\n\r\n      return (\r\n        <li\r\n          onClick={getPlaylistSongs}\r\n          className={\r\n            this.props.title === playlist.name\r\n              ? \"active side-menu-item\"\r\n              : \"side-menu-item\"\r\n          }\r\n          key={playlist.id}\r\n        >\r\n          {playlist.name}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-playlist-container\">\r\n        <h3 className=\"user-playlist-header\">Playlists</h3>\r\n        {this.props.playlistMenu && this.renderPlaylists()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserPlaylists.propTypes = {\r\n  userId: PropTypes.string,\r\n  token: PropTypes.string,\r\n  title: PropTypes.string,\r\n  playlistMenu: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  fetchPlaylistsMenu: PropTypes.func,\r\n  fetchPlaylistSongs: PropTypes.func,\r\n  updateHeaderTitle: PropTypes.func\r\n};\r\n\r\nexport default UserPlaylists;\r\n"]},"metadata":{},"sourceType":"module"}