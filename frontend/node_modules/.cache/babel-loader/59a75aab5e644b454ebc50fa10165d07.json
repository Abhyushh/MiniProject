{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Bhatia\\\\Desktop\\\\MiniProject\\\\frontend\\\\src\\\\components\\\\SongControls\\\\component.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './SongControls.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongControls extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      timeElapsed: this.props.timeElapsed\n    };\n\n    this.getSongIndex = () => {\n      const {\n        songs,\n        songDetails\n      } = this.props;\n      const currentIndex = songs.map((song, index) => {\n        if (song.track === songDetails) {\n          return index;\n        } else {\n          return undefined;\n        }\n      }).filter(item => {\n        return item !== undefined;\n      })[0];\n      return currentIndex;\n    };\n\n    this.nextSong = () => {\n      const {\n        songs,\n        audioControl\n      } = this.props;\n      let currentIndex = this.getSongIndex();\n      currentIndex === songs.length - 1 ? audioControl(songs[0]) : audioControl(songs[currentIndex + 1]);\n    };\n\n    this.prevSong = () => {\n      const {\n        songs,\n        audioControl\n      } = this.props;\n      let currentIndex = this.getSongIndex();\n      currentIndex === 0 ? audioControl(songs[songs.length - 1]) : audioControl(songs[currentIndex - 1]);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.songPlaying) {\n      clearInterval(this.state.intervalId);\n    }\n\n    if (nextProps.songPlaying && nextProps.timeElapsed === 0) {\n      clearInterval(this.state.intervalId);\n      this.calculateTime();\n    }\n\n    this.setState({\n      timeElapsed: nextProps.timeElapsed\n    });\n  }\n\n  calculateTime() {\n    const intervalId = setInterval(() => {\n      if (this.state.timeElapsed === 30) {\n        clearInterval(this.state.intervalId);\n        this.props.stopSong();\n      } else if (!this.props.songPaused) {\n        this.props.increaseSongTime(this.state.timeElapsed + 1);\n      }\n    }, 1000);\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n\n  render() {\n    const showPlay = this.props.songPaused ? 'fa fa-play-circle-o play-btn' : 'fa fa-pause-circle-o pause-btn';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"song-name\",\n          children: this.props.songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artist-name\",\n          children: this.props.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.prevSong,\n          className: \"reverse-song\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-step-backward reverse\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: !this.props.songPaused ? this.props.pauseSong : this.props.resumeSong,\n            className: \"fa play-btn\" + showPlay,\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.nextSong,\n          className: \"next-song\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-step-forward forward\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timer-start\",\n          children: moment().minutes(0).second(this.state.timeElapsed).format('m:ss')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: this.state.timeElapsed * 16.5\n            },\n            className: \"song-expired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timer-end\",\n          children: moment().minutes(0).second(30 - this.state.timeElapsed).format('m:ss')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSongControls.propTypes = {\n  timeElapsed: PropTypes.number,\n  songPlaying: PropTypes.bool,\n  songPaused: PropTypes.bool,\n  songName: PropTypes.string,\n  artistName: PropTypes.string,\n  stopSong: PropTypes.func,\n  resumeSong: PropTypes.func,\n  increaseSongTime: PropTypes.func,\n  pauseSong: PropTypes.func,\n  songs: PropTypes.array,\n  songDetails: PropTypes.object,\n  audioControl: PropTypes.func\n};\nexport default SongControls;","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/components/SongControls/component.js"],"names":["React","Component","PropTypes","moment","SongControls","state","timeElapsed","props","getSongIndex","songs","songDetails","currentIndex","map","song","index","track","undefined","filter","item","nextSong","audioControl","length","prevSong","componentWillReceiveProps","nextProps","songPlaying","clearInterval","intervalId","calculateTime","setState","setInterval","stopSong","songPaused","increaseSongTime","render","showPlay","songName","artistName","pauseSong","resumeSong","minutes","second","format","width","propTypes","number","bool","string","func","array","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport './SongControls.css';\r\n\r\nclass SongControls extends Component {\r\n\r\n  state = {\r\n    timeElapsed: this.props.timeElapsed\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (!nextProps.songPlaying) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n\r\n    if (nextProps.songPlaying && nextProps.timeElapsed === 0) {\r\n      clearInterval(this.state.intervalId);\r\n      this.calculateTime();\r\n    }\r\n\r\n    this.setState({\r\n      timeElapsed: nextProps.timeElapsed\r\n    });\r\n\r\n  }\r\n\r\n  calculateTime() {\r\n\r\n    const intervalId = setInterval(() => {\r\n      if (this.state.timeElapsed === 30) {\r\n        clearInterval(this.state.intervalId);\r\n        this.props.stopSong();\r\n      } else if (!this.props.songPaused) {\r\n        this.props.increaseSongTime(this.state.timeElapsed + 1);\r\n      }\r\n    }, 1000);\r\n\r\n    this.setState({\r\n      intervalId: intervalId\r\n    });\r\n\r\n  }\r\n\r\n  getSongIndex = () => {\r\n    const { songs, songDetails } = this.props;\r\n    const currentIndex = songs.map((song, index) => {\r\n      if (song.track === songDetails) {\r\n        return index;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }).filter(item => {\r\n      return item !== undefined;\r\n    })[0];\r\n\r\n    return currentIndex;\r\n  }\r\n\r\n  nextSong = () => {\r\n    const { songs, audioControl } = this.props;\r\n    let currentIndex = this.getSongIndex();\r\n    currentIndex === songs.length - 1 ? audioControl(songs[0]) : audioControl(songs[currentIndex + 1]);\r\n  }\r\n\r\n  prevSong = () => {\r\n    const { songs, audioControl } = this.props;\r\n    let currentIndex = this.getSongIndex();\r\n    currentIndex === 0 ? audioControl(songs[songs.length - 1]) : audioControl(songs[currentIndex - 1]);\r\n  }\r\n\r\n  render() {\r\n    const showPlay = this.props.songPaused ? 'fa fa-play-circle-o play-btn' : 'fa fa-pause-circle-o pause-btn';\r\n\r\n    return (\r\n      <div className='song-player-container'>\r\n\r\n        <div className='song-details'>\r\n          <p className='song-name'>{this.props.songName}</p>\r\n          <p className='artist-name'>{this.props.artistName}</p>\r\n        </div>\r\n\r\n        <div className='song-controls'>\r\n\r\n          <div onClick={this.prevSong} className='reverse-song'>\r\n            <i className=\"fa fa-step-backward reverse\" aria-hidden=\"true\" />\r\n          </div>\r\n\r\n          <div className='play-btn'>\r\n            <i onClick={!this.props.songPaused ? this.props.pauseSong : this.props.resumeSong} className={\"fa play-btn\" + showPlay} aria-hidden=\"true\" />\r\n          </div>\r\n\r\n          <div onClick={this.nextSong} className='next-song'>\r\n            <i className=\"fa fa-step-forward forward\" aria-hidden=\"true\" />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className='song-progress-container'>\r\n          <p className='timer-start'>{moment().minutes(0).second(this.state.timeElapsed).format('m:ss')}</p>\r\n          <div className='song-progress'>\r\n            <div style={{ width: this.state.timeElapsed * 16.5 }} className='song-expired' />\r\n          </div>\r\n          <p className='timer-end'>{moment().minutes(0).second(30 - this.state.timeElapsed).format('m:ss')}</p>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSongControls.propTypes = {\r\n  timeElapsed: PropTypes.number,\r\n  songPlaying: PropTypes.bool,\r\n  songPaused: PropTypes.bool,\r\n  songName: PropTypes.string,\r\n  artistName: PropTypes.string,\r\n  stopSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  increaseSongTime: PropTypes.func,\r\n  pauseSong: PropTypes.func,\r\n  songs: PropTypes.array,\r\n  songDetails: PropTypes.object,\r\n  audioControl: PropTypes.func\r\n};\r\n\r\nexport default SongControls;\r\n"]},"metadata":{},"sourceType":"module"}