{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Bhatia\\\\Desktop\\\\MiniProject\\\\frontend\\\\src\\\\components\\\\BrowseView\\\\component.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './BrowseView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowseView = _ref => {\n  let {\n    view,\n    viewType,\n    token,\n    fetchPlaylistSongs,\n    updateHeaderTitle,\n    addPlaylistItem\n  } = _ref;\n  let browseView;\n\n  if (view) {\n    browseView = view.map((item, i) => {\n      const getPlaylistSongs = () => {\n        addPlaylistItem(item);\n        fetchPlaylistSongs(item.owner.id, item.id, token);\n        updateHeaderTitle(item.name);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: viewType === 'Featured' ? getPlaylistSongs : null,\n        className: \"category-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"category\",\n            src: item.icons ? item.icons[0].url : item.images[0].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), viewType === 'Genres' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"category-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"browse-view-container\",\n    children: browseView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BrowseView;\nBrowseView.propTypes = {\n  view: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  viewType: PropTypes.string,\n  token: PropTypes.string,\n  fetchPlaylistSongs: PropTypes.func,\n  updateHeaderTitle: PropTypes.func,\n  addPlaylistItem: PropTypes.func\n};\nexport default BrowseView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseView\");","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/components/BrowseView/component.js"],"names":["React","PropTypes","BrowseView","view","viewType","token","fetchPlaylistSongs","updateHeaderTitle","addPlaylistItem","browseView","map","item","i","getPlaylistSongs","owner","id","name","icons","url","images","propTypes","oneOfType","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,QAAuF;AAAA,MAAtF;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,kBAAzB;AAA6CC,IAAAA,iBAA7C;AAAgEC,IAAAA;AAAhE,GAAsF;AAExG,MAAIC,UAAJ;;AAEA,MAAIN,IAAJ,EAAU;AAERM,IAAAA,UAAU,GAAGN,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AAEjC,YAAMC,gBAAgB,GAAG,MAAM;AAC7BL,QAAAA,eAAe,CAACG,IAAD,CAAf;AACAL,QAAAA,kBAAkB,CAACK,IAAI,CAACG,KAAL,CAAWC,EAAZ,EAAgBJ,IAAI,CAACI,EAArB,EAAyBV,KAAzB,CAAlB;AACAE,QAAAA,iBAAiB,CAACI,IAAI,CAACK,IAAN,CAAjB;AACD,OAJD;;AAMA,0BACE;AAAI,QAAA,OAAO,EAAEZ,QAAQ,KAAK,UAAb,GAA0BS,gBAA1B,GAA6C,IAA1D;AAAgE,QAAA,SAAS,EAAC,eAA1E;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAC,UAAT;AAAoB,YAAA,GAAG,EAAEF,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,GAA3B,GAAiCP,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeD;AAAzE;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGd,QAAQ,KAAK,QAAb,iBACC;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,sBAA8BO,IAAI,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA+FJ,CAA/F;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAlBY,CAAb;AAmBD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;KAAMP,U;AAmCNA,UAAU,CAACkB,SAAX,GAAuB;AACrBjB,EAAAA,IAAI,EAAEF,SAAS,CAACoB,SAAV,CAAoB,CACxBpB,SAAS,CAACqB,MADc,EAExBrB,SAAS,CAACsB,KAFc,CAApB,CADe;AAKrBnB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,MALC;AAMrBjB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,MANI;AAOrBhB,EAAAA,kBAAkB,EAAEL,SAAS,CAACuB,IAPT;AAQrBjB,EAAAA,iBAAiB,EAAEN,SAAS,CAACuB,IARR;AASrBhB,EAAAA,eAAe,EAAEP,SAAS,CAACuB;AATN,CAAvB;AAYA,eAAetB,UAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BrowseView.css';\r\n\r\nconst BrowseView = ({ view, viewType, token, fetchPlaylistSongs, updateHeaderTitle, addPlaylistItem }) => {\r\n\r\n  let browseView;\r\n\r\n  if (view) {\r\n\r\n    browseView = view.map((item, i) => {\r\n\r\n      const getPlaylistSongs = () => {\r\n        addPlaylistItem(item);\r\n        fetchPlaylistSongs(item.owner.id, item.id, token);\r\n        updateHeaderTitle(item.name);\r\n      };\r\n\r\n      return (\r\n        <li onClick={viewType === 'Featured' ? getPlaylistSongs : null} className='category-item' key={i}>\r\n          <div className='category-image'>\r\n            <img alt=\"category\" src={item.icons ? item.icons[0].url : item.images[0].url} />\r\n            {viewType === 'Genres' && (\r\n              <p className='category-name'>{item.name}</p>\r\n            )}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ul className='browse-view-container'>\r\n      {browseView}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nBrowseView.propTypes = {\r\n  view: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array\r\n  ]),\r\n  viewType: PropTypes.string,\r\n  token: PropTypes.string,\r\n  fetchPlaylistSongs: PropTypes.func,\r\n  updateHeaderTitle: PropTypes.func,\r\n  addPlaylistItem: PropTypes.func\r\n};\r\n\r\nexport default BrowseView;\r\n"]},"metadata":{},"sourceType":"module"}