{"ast":null,"code":"export const fetchCategoriesSuccess = categories => {\n  return {\n    type: 'FETCH_CATEGORIES_SUCCESS',\n    categories\n  };\n};\nexport const fetchCategoriesError = () => {\n  return {\n    type: 'FETCH_CATEGORIES_ERROR'\n  };\n};\nexport const fetchCategories = accessToken => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/categories`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchCategoriesSuccess(res.categories));\n    }).catch(err => {\n      dispatch(fetchCategoriesError(err));\n    });\n  };\n};\nexport const fetchNewReleasesSuccess = newReleases => {\n  return {\n    type: 'FETCH_NEW_RELEASES_SUCCESS',\n    newReleases\n  };\n};\nexport const fetchNewReleasesError = () => {\n  return {\n    type: 'FETCH_NEW_RELEASES_ERROR'\n  };\n};\nexport const fetchNewReleases = accessToken => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/new-releases`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchNewReleasesSuccess(res.albums));\n    }).catch(err => {\n      dispatch(fetchNewReleasesError(err));\n    });\n  };\n};\nexport const fetchFeaturedSuccess = featured => {\n  return {\n    type: 'FETCH_FEATURED_SUCCESS',\n    featured\n  };\n};\nexport const fetchFeaturedError = () => {\n  return {\n    type: 'FETCH_FEATURED_ERROR'\n  };\n};\nexport const fetchFeatured = accessToken => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/featured-playlists`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchFeaturedSuccess(res.playlists));\n    }).catch(err => {\n      dispatch(fetchFeaturedError(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/actions/browseActions.js"],"names":["fetchCategoriesSuccess","categories","type","fetchCategoriesError","fetchCategories","accessToken","dispatch","request","Request","headers","Headers","fetch","then","res","json","catch","err","fetchNewReleasesSuccess","newReleases","fetchNewReleasesError","fetchNewReleases","albums","fetchFeaturedSuccess","featured","fetchFeaturedError","fetchFeatured","playlists"],"mappings":"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","sourcesContent":["export const fetchCategoriesSuccess = (categories) => {\r\n  return {\r\n    type: 'FETCH_CATEGORIES_SUCCESS',\r\n    categories\r\n  };\r\n};\r\n\r\nexport const fetchCategoriesError = () => {\r\n  return {\r\n    type: 'FETCH_CATEGORIES_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchCategories = (accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/browse/categories`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n    fetch(request).then(res => {\r\n      return res.json();\r\n    }).then(res => {\r\n      dispatch(fetchCategoriesSuccess(res.categories));\r\n    }).catch(err => {\r\n      dispatch(fetchCategoriesError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchNewReleasesSuccess = (newReleases) => {\r\n  return {\r\n    type: 'FETCH_NEW_RELEASES_SUCCESS',\r\n    newReleases\r\n  };\r\n};\r\n\r\nexport const fetchNewReleasesError = () => {\r\n  return {\r\n    type: 'FETCH_NEW_RELEASES_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchNewReleases = (accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/browse/new-releases`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n    fetch(request).then(res => {\r\n      return res.json();\r\n    }).then(res => {\r\n      dispatch(fetchNewReleasesSuccess(res.albums));\r\n    }).catch(err => {\r\n      dispatch(fetchNewReleasesError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchFeaturedSuccess = (featured) => {\r\n  return {\r\n    type: 'FETCH_FEATURED_SUCCESS',\r\n    featured\r\n  };\r\n};\r\n\r\nexport const fetchFeaturedError = () => {\r\n  return {\r\n    type: 'FETCH_FEATURED_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchFeatured = (accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/browse/featured-playlists`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n    fetch(request).then(res => {\r\n      return res.json();\r\n    }).then(res => {\r\n      dispatch(fetchFeaturedSuccess(res.playlists));\r\n    }).catch(err => {\r\n      dispatch(fetchFeaturedError(err));\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}