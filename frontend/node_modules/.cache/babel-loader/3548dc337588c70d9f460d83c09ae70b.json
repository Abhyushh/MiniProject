{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Bhatia\\\\Desktop\\\\MiniProject\\\\frontend\\\\src\\\\components\\\\ArtistList\\\\component.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ArtistList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArtistList = _ref => {\n  let {\n    artists,\n    fetchArtistSongs,\n    token,\n    updateHeaderTitle\n  } = _ref;\n\n  const renderArtists = () => {\n    return artists.map((artist, i) => {\n      const artistSongsAction = (artist, token) => {\n        fetchArtistSongs(artist.id, token);\n        updateHeaderTitle(artist.name);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          artistSongsAction(artist, token);\n        },\n        className: \"artist-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"artist\",\n                src: artist.images[0] ? artist.images[0].url : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist-details\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"artist-view-container\",\n    children: artists && renderArtists()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ArtistList;\nArtistList.propTypes = {\n  artists: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  fetchArtistSongs: PropTypes.func,\n  token: PropTypes.string,\n  updateHeaderTitle: PropTypes.func\n};\nexport default ArtistList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistList\");","map":{"version":3,"sources":["C:/Users/Akshat Bhatia/Desktop/MiniProject/frontend/src/components/ArtistList/component.js"],"names":["React","PropTypes","ArtistList","artists","fetchArtistSongs","token","updateHeaderTitle","renderArtists","map","artist","i","artistSongsAction","id","name","images","url","propTypes","oneOfType","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,QAKb;AAAA,MALc;AAClBC,IAAAA,OADkB;AAElBC,IAAAA,gBAFkB;AAGlBC,IAAAA,KAHkB;AAIlBC,IAAAA;AAJkB,GAKd;;AACJ,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOJ,OAAO,CAACK,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AAChC,YAAMC,iBAAiB,GAAG,CAACF,MAAD,EAASJ,KAAT,KAAmB;AAC3CD,QAAAA,gBAAgB,CAACK,MAAM,CAACG,EAAR,EAAYP,KAAZ,CAAhB;AACAC,QAAAA,iBAAiB,CAACG,MAAM,CAACI,IAAR,CAAjB;AACD,OAHD;;AAKA,0BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,iBAAiB,CAACF,MAAD,EAASJ,KAAT,CAAjB;AACD,SAHH;AAIE,QAAA,SAAS,EAAC,aAJZ;AAAA,+BAOE;AAAA,iCACE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAC,QAAT;AAAkB,gBAAA,GAAG,EAAEI,MAAM,CAACK,MAAP,CAAc,CAAd,IAAmBL,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBC,GAApC,GAA0C;AAAjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,qCACE;AAAA,0BAAIN,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,SAKOH,CALP;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KA1BM,CAAP;AA2BD,GA5BD;;AA8BA,sBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA,cAAuCP,OAAO,IAAII,aAAa;AAA/D;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAvCD;;KAAML,U;AAyCNA,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,OAAO,EAAEF,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,KAA7B,CAApB,CADY;AAErBf,EAAAA,gBAAgB,EAAEH,SAAS,CAACmB,IAFP;AAGrBf,EAAAA,KAAK,EAAEJ,SAAS,CAACiB,MAHI;AAIrBZ,EAAAA,iBAAiB,EAAEL,SAAS,CAACmB;AAJR,CAAvB;AAOA,eAAelB,UAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ArtistList.css\";\r\n\r\nconst ArtistList = ({\r\n  artists,\r\n  fetchArtistSongs,\r\n  token,\r\n  updateHeaderTitle\r\n}) => {\r\n  const renderArtists = () => {\r\n    return artists.map((artist, i) => {\r\n      const artistSongsAction = (artist, token) => {\r\n        fetchArtistSongs(artist.id, token);\r\n        updateHeaderTitle(artist.name);\r\n      };\r\n\r\n      return (\r\n        <li\r\n          onClick={() => {\r\n            artistSongsAction(artist, token);\r\n          }}\r\n          className=\"artist-item\"\r\n          key={i}\r\n        >\r\n          <a>\r\n            <div>\r\n              <div className=\"artist-image\">\r\n                <img alt=\"artist\" src={artist.images[0] ? artist.images[0].url : \"\"} />\r\n              </div>\r\n              <div className=\"artist-details\">\r\n                <p>{artist.name}</p>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ul className=\"artist-view-container\">{artists && renderArtists()}</ul>\r\n  );\r\n};\r\n\r\nArtistList.propTypes = {\r\n  artists: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  fetchArtistSongs: PropTypes.func,\r\n  token: PropTypes.string,\r\n  updateHeaderTitle: PropTypes.func\r\n};\r\n\r\nexport default ArtistList;\r\n"]},"metadata":{},"sourceType":"module"}